/*
Here's the fixed version with missing closing brackets and required whitespace. The main issue was missing the closing bracket for the time slots label section. Here's the complete fix:
*/

import React, { useState } from 'react';
import { Calculator as CalcIcon, MapPin, Package, Weight, Calendar, Clock, Building, Phone, MessageSquare, CheckCircle, X } from 'lucide-react';
import { warehouses, additionalServices, extraCharges } from '../data/warehouses';
import WarehouseAutocomplete from './WarehouseAutocomplete';
import Modal from './Modal';

const Calculator = () => {
  const [formData, setFormData] = useState({
    pickupDate: '',
    deliveryDate: '',
    company: '',
    phone: '',
    pickupTime: '',
    pickupAddress: '',
    deliveryAddress: '',
    pallets: '',
    boxes: '',
    weight: '',
    loading: false,
    palletizing: false,
    comment: ''
  });

  const [result, setResult] = useState<number | null>(null);
  const [isCalculating, setIsCalculating] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [errors, setErrors] = useState<any>({});
  const [showSuccessModal, setShowSuccessModal] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google –¢–∞–±–ª–∏—Ü—ã
  const sendToGoogleSheets = async (orderData: any) => {
    try {
      // –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL Google Apps Script Web App
      const GOOGLE_SCRIPT_URL = 'YOUR_GOOGLE_SCRIPT_URL_HERE';
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω
      if (GOOGLE_SCRIPT_URL === 'YOUR_GOOGLE_SCRIPT_URL_HERE') {
        console.warn('Google Apps Script URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Google –¢–∞–±–ª–∏—Ü—ã.');
        return false;
      }
      
      const response = await fetch(GOOGLE_SCRIPT_URL, {
        method: 'POST',
        mode: 'no-cors',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          pickupDate: new Date(orderData.pickupDate).toLocaleDateString('ru-RU'),
          deliveryDate: new Date(orderData.deliveryDate).toLocaleDateString('ru-RU'),
          company: orderData.company,
          phone: orderData.phone,
          pickupTime: orderData.pickupTime,
          pickupAddress: orderData.pickupAddress,
          deliveryAddress: orderData.deliveryAddress,
          pallets: orderData.pallets || 0,
          boxes: orderData.boxes || 0,
          weight: orderData.weight,
          loading: orderData.loading ? '–î–∞' : '–ù–µ—Ç',
          palletizing: orderData.palletizing ? '–î–∞' : '–ù–µ—Ç',
          comment: orderData.comment,
          calculatedCost: result || 0,
          finalCost: '' // –ü—É—Å—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –∑–∞–ø–æ–ª–Ω–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä
        })
      });
      
      return true;
    } catch (error) {
      console.warn('Google –¢–∞–±–ª–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', error);
      return false;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
  const sendToTelegram = async (orderData: any) => {
    try {
      // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Bot Token –∏ Chat ID
      const BOT_TOKEN = '7791875105:AAEPoWoP_gwLbuUSLcbIYfdjRhjSHqZle6M';
      const CHAT_ID = '1774311470';
      
      const message = `üöö *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –î–û–°–¢–ê–í–ö–£*

üë§ *–ö–æ–º–ø–∞–Ω–∏—è:* ${orderData.company}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${orderData.phone}

üìÖ *–î–∞—Ç–∞ –∑–∞–±–æ—Ä–∞:* ${new Date(orderData.pickupDate).toLocaleDateString('ru-RU')}
‚è∞ *–í—Ä–µ–º—è –∑–∞–±–æ—Ä–∞:* ${orderData.pickupTime}
üìç *–ê–¥—Ä–µ—Å –∑–∞–±–æ—Ä–∞:* ${orderData.pickupAddress}

üìÖ *–î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:* ${new Date(orderData.deliveryDate).toLocaleDateString('ru-RU')}
üè¢ *–°–∫–ª–∞–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:* ${orderData.deliveryAddress}

üì¶ *–ì—Ä—É–∑:*
${orderData.boxes ? `‚Ä¢ –ö–æ—Ä–æ–±–∫–∏: ${orderData.boxes} —à—Ç` : ''}
${orderData.pallets ? `‚Ä¢ –ü–∞–ª–ª–µ—Ç—ã: ${orderData.pallets} —à—Ç` : ''}
${orderData.weight ? `‚Ä¢ –í–µ—Å: ${orderData.weight}` : ''}

üîß *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:*
${orderData.loading ? '‚Ä¢ ‚úÖ –ü–æ–≥—Ä—É–∑–∫–∞' : '‚Ä¢ ‚ùå –ü–æ–≥—Ä—É–∑–∫–∞'}
${orderData.palletizing ? '‚Ä¢ ‚úÖ –ü–∞–ª–ª–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : '‚Ä¢ ‚ùå –ü–∞–ª–ª–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'}

${orderData.comment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${orderData.comment}` : ''}

‚è∞ *–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:* ${new Date().toLocaleString('ru-RU')}`;

      const telegramUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
      
      const response = await fetch(telegramUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: message,
          parse_mode: 'Markdown'
        })
      });

      if (response.ok) {
        return true;
      } else {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', await response.text());
        return false;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
      return false;
    }
  };
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value, type } = e.target;
    if (type === 'checkbox') {
      const checked = (e.target as HTMLInputElement).checked;
      setFormData(prev => ({
        ...prev,
        [name]: checked
      }));
    } else {
      setFormData(prev => ({
        ...prev,
        [name]: value
      }));
    }
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[name]) {
      setErrors((prev: any) => ({
        ...prev,
        [name]: ''
      }));
    }
  };

  const validateForm = () => {
    const newErrors: any = {};
    const today = new Date().toISOString().split('T')[0];

    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!formData.pickupDate) {
      newErrors.pickupDate = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞';
    } else if (formData.pickupDate < today) {
      newErrors.pickupDate = '–î–∞—Ç–∞ –∑–∞–±–æ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è';
    }

    if (!formData.deliveryDate) {
      newErrors.deliveryDate = '–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω–æ–≤—É—é –¥–∞—Ç—É —Å–¥–∞—á–∏ –≥—Ä—É–∑–∞';
    } else if (formData.deliveryDate < today) {
      newErrors.deliveryDate = '–î–∞—Ç–∞ —Å–¥–∞—á–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è';
    }

    if (!formData.company.trim()) {
      newErrors.company = '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏';
    }

    if (!formData.phone.trim()) {
      newErrors.phone = '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
    }

    if (!formData.pickupTime) {
      newErrors.pickupTime = '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞';
    }

    if (!formData.pickupAddress.trim()) {
      newErrors.pickupAddress = '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞';
    }

    if (!formData.deliveryAddress) {
      newErrors.deliveryAddress = '–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏';
    }

    if (!formData.weight.trim()) {
      newErrors.weight = '–£–∫–∞–∂–∏—Ç–µ –æ–±—â–∏–π –≤–µ—Å –≥—Ä—É–∑–∞';
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω–æ —Ö–æ—Ç—è –±—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –∏–ª–∏ –ø–∞–ª–ª–µ—Ç
    const boxes = parseInt(formData.boxes || '0');
    const pallets = parseInt(formData.pallets || '0');
    
    if (boxes === 0 && pallets === 0) {
      newErrors.boxes = '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –∏–ª–∏ –ø–∞–ª–ª–µ—Ç';
      newErrors.pallets = '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –∏–ª–∏ –ø–∞–ª–ª–µ—Ç';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–∫–ª–∞–¥–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  const findWarehouseByName = (deliveryAddress: string) => {
    if (!deliveryAddress) return null;
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
    const normalizedAddress = deliveryAddress.toLowerCase();
    
    return warehouses.find(warehouse => {
      // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã
      const warehouseNames = warehouse.name.toLowerCase().split(',').map(name => name.trim());
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞
      return warehouseNames.some(warehouseName => {
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        const cleanWarehouseName = warehouseName
          .replace(/^(wb|ozon|—è–Ω–¥–µ–∫—Å\.–º–∞—Ä–∫–µ—Ç|—Å–±–µ—Ä–ª–æ–≥–∏—Å—Ç–∏–∫–∞|–¥–µ—Ç—Å–∫–∏–π –º–∏—Ä)\s*/i, '')
          .trim();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞ –≤ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        return normalizedAddress.includes(cleanWarehouseName) || 
               cleanWarehouseName.includes(normalizedAddress.replace(/^(wb|ozon|—è–Ω–¥–µ–∫—Å\.–º–∞—Ä–∫–µ—Ç|—Å–±–µ—Ä–ª–æ–≥–∏—Å—Ç–∏–∫–∞|–¥–µ—Ç—Å–∫–∏–π –º–∏—Ä)\s*/i, '').trim());
      });
    });
  };

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π
  React.useEffect(() => {
    const shouldCalculate = formData.deliveryAddress && 
                           (formData.boxes || formData.pallets) && 
                           formData.weight;
    
    if (shouldCalculate) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
      const timer = setTimeout(() => {
        calculateCostAuto();
      }, 300);
      
      return () => clearTimeout(timer);
    } else {
      setResult(null);
    }
  }, [formData.deliveryAddress, formData.boxes, formData.pallets, formData.loading, formData.palletizing]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –±–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
  const calculateCostAuto = async () => {
    if (!formData.deliveryAddress || (!formData.boxes && !formData.pallets)) {
      setResult(null);
      return;
    }

    setIsCalculating(true);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    await new Promise(resolve => setTimeout(resolve, 500));
    
    const boxes = parseInt(formData.boxes || '0');
    const pallets = parseInt(formData.pallets || '0');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∫–ª–∞–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω
    const selectedWarehouse = findWarehouseByName(formData.deliveryAddress);
    
    // –ï—Å–ª–∏ —Å–∫–ª–∞–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ—Å–∫–æ–≤—Å–∫–∏–µ —Ü–µ–Ω—ã
    const warehousePricing = selectedWarehouse?.pricing || {
      toCube: 2500,
      boxes1to3: 150,
      pallets: { 1: 2700 }
    };
    
    let baseCost = 0;
    
    // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–π—Å—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∫–ª–∞–¥–∞
    if (boxes > 0 && pallets === 0) {
      // –¢–æ–ª—å–∫–æ –∫–æ—Ä–æ–±–∫–∏ –±–µ–∑ –ø–∞–ª–ª–µ—Ç
      if (boxes <= 10) {
        // 1-10 –∫–æ—Ä–æ–±–æ–∫ = –¥–æ –∫—É–±–∞
        baseCost += warehousePricing.toCube;
      } else if (boxes <= 16) {
        // 11-16 –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞
        const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
        baseCost += palletPrice;
      } else {
        // 17+ –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ
        const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
        baseCost += palletPrice; // 1 –ø–∞–ª–ª–µ—Ç–∞ –∑–∞ –ø–µ—Ä–≤—ã–µ 16 –∫–æ—Ä–æ–±–æ–∫
        baseCost += warehousePricing.toCube; // –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ –∫–æ—Ä–æ–±–∫–∏
      }
    } else if (boxes === 0 && pallets > 0) {
      // –¢–æ–ª—å–∫–æ –ø–∞–ª–ª–µ—Ç—ã –±–µ–∑ –∫–æ—Ä–æ–±–æ–∫
      const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
      baseCost += pallets * palletPrice;
    } else if (boxes > 0 && pallets > 0) {
      // –ò –∫–æ—Ä–æ–±–∫–∏, –∏ –ø–∞–ª–ª–µ—Ç—ã
      const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
      baseCost += pallets * palletPrice;
      if (boxes <= 10) {
        // 1-10 –∫–æ—Ä–æ–±–æ–∫ = –¥–æ –∫—É–±–∞
        baseCost += warehousePricing.toCube;
      } else if (boxes <= 16) {
        // 11-16 –∫–æ—Ä–æ–±–æ–∫ = –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞
        baseCost += palletPrice;
      } else {
        // 17+ –∫–æ—Ä–æ–±–æ–∫ = –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ
        baseCost += palletPrice; // –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞ –∑–∞ –∫–æ—Ä–æ–±–∫–∏ 11-16
        baseCost += warehousePricing.toCube; // –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ –∫–æ—Ä–æ–±–∫–∏
      }
    }
    
    const loadingCost = formData.loading ? 500 : 0;
    let palletizingCost = 0;
    if (formData.palletizing) {
      palletizingCost = pallets * 300;
    }
    
    const total = baseCost + loadingCost + palletizingCost;
    setResult(total);
    setIsCalculating(false);
  };

  const calculateCost = () => {
    if (!validateForm()) {
      return;
    }

    const boxes = parseInt(formData.boxes || '0');
    const pallets = parseInt(formData.pallets || '0');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–∫–ª–∞–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω
    const selectedWarehouse = findWarehouseByName(formData.deliveryAddress);
    
    // –ï—Å–ª–∏ —Å–∫–ª–∞–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ—Å–∫–æ–≤—Å–∫–∏–µ —Ü–µ–Ω—ã
    const warehousePricing = selectedWarehouse?.pricing || {
      toCube: 2500,
      boxes1to3: 150,
      pallets: { 1: 2700 }
    };
    
    let baseCost = 0;
    
    // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–π—Å—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∫–ª–∞–¥–∞
    if (boxes > 0 && pallets === 0) {
      // –¢–æ–ª—å–∫–æ –∫–æ—Ä–æ–±–∫–∏ –±–µ–∑ –ø–∞–ª–ª–µ—Ç
      if (boxes <= 10) {
        // 1-10 –∫–æ—Ä–æ–±–æ–∫ = –¥–æ –∫—É–±–∞
        baseCost += warehousePricing.toCube;
      } else if (boxes <= 16) {
        // 11-16 –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞
        const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
        baseCost += palletPrice;
      } else {
        // 17+ –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ
        const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
        baseCost += palletPrice; // 1 –ø–∞–ª–ª–µ—Ç–∞ –∑–∞ –ø–µ—Ä–≤—ã–µ 16 –∫–æ—Ä–æ–±–æ–∫
        baseCost += warehousePricing.toCube; // –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ –∫–æ—Ä–æ–±–∫–∏
      }
    } else if (boxes === 0 && pallets > 0) {
      // –¢–æ–ª—å–∫–æ –ø–∞–ª–ª–µ—Ç—ã –±–µ–∑ –∫–æ—Ä–æ–±–æ–∫
      const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
      baseCost += pallets * palletPrice;
    } else if (boxes > 0 && pallets > 0) {
      // –ò –∫–æ—Ä–æ–±–∫–∏, –∏ –ø–∞–ª–ª–µ—Ç—ã
      const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
      baseCost += pallets * palletPrice; // —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞–ª–ª–µ—Ç
      if (boxes <= 10) {
        // 1-10 –∫–æ—Ä–æ–±–æ–∫ = –¥–æ –∫—É–±–∞
        baseCost += warehousePricing.toCube; // –¥–æ –∫—É–±–∞ –∑–∞ –∫–æ—Ä–æ–±–∫–∏
      } else if (boxes <= 16) {
        // 11-16 –∫–æ—Ä–æ–±–æ–∫ = –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞
        baseCost += palletPrice;
      } else {
        // 17+ –∫–æ—Ä–æ–±–æ–∫ = –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ
        baseCost += palletPrice; // –µ—â–µ 1 –ø–∞–ª–ª–µ—Ç–∞ –∑–∞ –∫–æ—Ä–æ–±–∫–∏ 11-16
        baseCost += warehousePricing.toCube; // –¥–æ –∫—É–±–∞ –∑–∞ –ª–∏—à–Ω–∏–µ –∫–æ—Ä–æ–±–∫–∏
      }
    }
    
    const loadingCost = formData.loading ? 500 : 0;
    
    // –ü–∞–ª–ª–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–∞–ª–ª–µ—Ç–∞–º
    let palletizingCost = 0;
    if (formData.palletizing) {
      palletizingCost = pallets * 300;
    }
    
    const total = baseCost + loadingCost + palletizingCost;
    setResult(total);
  };

  const handleSubmitOrder = async () => {
    if (!validateForm()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return;
    }

    if (result === null) {
      alert('–°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏');
      return;
    }

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    setIsSubmitting(true);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—ã –∏ Telegram
    const [sheetsSuccess, telegramSuccess] = await Promise.all([
      sendToGoogleSheets(formData),
      sendToTelegram(formData)
    ]);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    if (sheetsSuccess || telegramSuccess) {
      setShowSuccessModal(true);
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setFormData({
        pickupDate: '',
        deliveryDate: '',
        company: '',
        phone: '',
        pickupTime: '',
        pickupAddress: '',
        deliveryAddress: '',
        pallets: '',
        boxes: '',
        weight: '',
        loading: false,
        palletizing: false,
        comment: ''
      });
      setResult(null);
      setErrors({});
      
      // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏
      if (!sheetsSuccess) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Google –¢–∞–±–ª–∏—Ü—ã');
      }
      if (!telegramSuccess) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram');
      }
    } else {
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (936) 130-20-70');
    }
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
    setIsSubmitting(false);
  };

  const timeSlots = [
    '—Å 09:00 –¥–æ 12:00',
    '—Å 12:00 –¥–æ 15:00', 
    '—Å 15:00 –¥–æ 18:00',
    '—Å 18:00 –¥–æ 21:00',
    '—Å 10:00 –¥–æ 18:00',
    '–í–µ—Å—å –¥–µ–Ω—å (09:00-21:00)'
  ];
  const warehouseOptions = warehouses.map(warehouse => ({
    value: warehouse.id,
    label: warehouse.name,
    marketplace: warehouse.marketplace
  }));

  return (
    <section id="calculator" className="py-16 lg:py-24" style={{backgroundColor: 'rgb(239, 238, 249)'}}>
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <CalcIcon className="w-8 h-8 text-accent-500" />
            <h2 className="text-3xl lg:text-4xl font-bold text-primary-800">
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            </h2>
          </div>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
          </p>
        </div>

        <div className="max-w-6xl mx-auto">
          <div className="bg-white rounded-2xl shadow-xl p-8 lg:p-12">
            <div className="grid lg:grid-cols-3 gap-8">
              {/* Form */}
              <div className="lg:col-span-2 space-y-6">
                <h3 className="text-xl font-semibold text-primary-800 mb-6">
                  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞—è–≤–∫–∏
                </h3>

                {/* –î–∞—Ç—ã */}
                <div className="grid sm:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      <Calendar className="w-4 h-4 inline mr-1" />
                      –î–∞—Ç–∞ –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞ *
                    </label>
                    <input
                      type="date"
                      name="pickupDate"
                      value={formData.pickupDate}
                      min={new Date().toISOString().split('T')[0]}
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.pickupDate ? 'border-red-500' : 'border-gray-300'
                      }`}
                      onChange={(e) => {
                        setFormData(prev => ({ ...prev, pickupDate: e.target.value }));
                      }}
                    />
                    {errors.pickupDate && (
                      <p className="mt-1 text-sm text-red-600">{errors.pickupDate}</p>
                    )}
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      <Calendar className="w-4 h-4 inline mr-1" />
                      –ü–ª–∞–Ω–æ–≤–∞—è —Å–¥–∞—á–∞ –≥—Ä—É–∑–∞ *
                    </label>
                    <input
                      type="date"
                      name="deliveryDate"
                      value={formData.deliveryDate}
                      min={formData.pickupDate || new Date().toISOString().split('T')[0]}
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.deliveryDate ? 'border-red-500' : 'border-gray-300'
                      }`}
                      onChange={(e) => {
                        setFormData(prev => ({ ...prev, deliveryDate: e.target.value }));
                      }}
                    />
                    {errors.deliveryDate && (
                      <p className="mt-1 text-sm text-red-600">{errors.deliveryDate}</p>
                    )}
                  </div>
                </div>

                {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="grid sm:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      <Building className="w-4 h-4 inline mr-1" />
                      –í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è *
                    </label>
                    <input
                      type="text"
                      name="company"
                      value={formData.company}
                      onChange={handleInputChange}
                      placeholder="–ò–ü –°–º–∏—Ä–Ω–æ–≤ –í–∏–∫—Ç–æ—Ä –ê–ª–µ–∫—Å–µ–µ–≤–∏—á"
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.company ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.company && (
                      <p className="mt-1 text-sm text-red-600">{errors.company}</p>
                    )}
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      <Phone className="w-4 h-4 inline mr-1" />
                      –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω *
                    </label>
                    <input
                      type="tel"
                      name="phone"
                      value={formData.phone}
                      onChange={handleInputChange}
                      placeholder="+7(999)333-33-33"
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.phone ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.phone && (
                      <p className="mt-1 text-sm text-red-600">{errors.phone}</p>
                    )}
                  </div>
                </div>

                {/* –í—Ä–µ–º—è –∏ –∞–¥—Ä–µ—Å–∞ */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    <Clock className="w-4 h-4 inline mr-1" />
                    –í—Ä–µ–º—è –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞ *
                  </label>
                  <select
                    name="pickupTime"
                    value={formData.pickupTime}
                    onChange={handleInputChange}
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                      errors.pickupTime ? 'border-red-500' : 'border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</option>
                    {timeSlots.map((slot, index) => (
                      <option key={index} value={slot}>
                        {slot}
                      </option>
                    ))}
                  </select>
                  {errors.pickupTime && (
                    <p className="mt-1 text-sm text-red-600">{errors.pickupTime}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    <MapPin className="w-4 h-4 inline mr-1" />
                    –ê–¥—Ä–µ—Å –∑–∞–±–æ—Ä–∞ –≥—Ä—É–∑–∞ *
                  </label>
                  <input
                    type="text"
                    name="pickupAddress"
                    value={formData.pickupAddress}
                    onChange={handleInputChange}
                    placeholder="–ú–û, –î–º–∏—Ç—Ä–æ–≤—Å–∫–∏–π —Ä-–Ω, –ø–æ—Å. –î–µ–¥–µ–Ω–µ–≤–æ, —É–ª. –õ–µ–Ω–∏–Ω–∞ 3"
                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                      errors.pickupAddress ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.pickupAddress && (
                    <p className="mt-1 text-sm text-red-600">{errors.pickupAddress}</p>
                  )}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    <MapPin className="w-4 h-4 inline mr-1" />
                    –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–∞ *
                  </label>
                  <WarehouseAutocomplete
                    value={formData.deliveryAddress}
                    onChange={(value) => setFormData(prev => ({ ...prev, deliveryAddress: value }))}
                    error={errors.deliveryAddress}
                    placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞..."
                  />
                  {errors.deliveryAddress && (
                    <p className="mt-1 text-sm text-red-600">{errors.deliveryAddress}</p>
                  )}
                </div>

                {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥—Ä—É–∑–∞ */}
                <div className="grid sm:grid-cols-3 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2 min-h-[2.5rem] flex items-end">
                      <Package className="w-4 h-4 inline mr-1" />
                      –ö–æ–ª-–≤–æ –∫–æ—Ä–æ–±–æ–≤ *
                    </label>
                    <input
                      type="number"
                      name="boxes"
                      value={formData.boxes}
                      onChange={handleInputChange}
                      placeholder="0"
                      min="0"
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.boxes ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.boxes && (
                      <p className="mt-1 text-sm text-red-600">{errors.boxes}</p>
                    )}
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2 min-h-[2.5rem] flex items-end">
                      <Package className="w-4 h-4 inline mr-1" />
                      –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ª–ª–µ—Ç *
                    </label>
                    <input
                      type="number"
                      name="pallets"
                      value={formData.pallets}
                      onChange={handleInputChange}
                      placeholder="0"
                      min="0"
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.pallets ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.pallets && (
                      <p className="mt-1 text-sm text-red-600">{errors.pallets}</p>
                    )}
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2 min-h-[2.5rem] flex items-end">
                      <Weight className="w-4 h-4 inline mr-1" />
                      –û–±—â–∏–π –≤–µ—Å *
                    </label>
                    <input
                      type="text"
                      name="weight"
                      value={formData.weight}
                      onChange={handleInputChange}
                      placeholder="25 –∫–≥"
                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors ${
                        errors.weight ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.weight && (
                      <p className="mt-1 text-sm text-red-600">{errors.weight}</p>
                    )}
                  </div>
                </div>

                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
                <div className="grid sm:grid-cols-2 gap-4">
                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      name="loading"
                      checked={formData.loading}
                      onChange={handleInputChange}
                      className="w-4 h-4 text-accent-600 bg-gray-100 border-gray-300 rounded focus:ring-accent-500 focus:ring-2"
                    />
                    <label className="ml-2 text-sm font-medium text-gray-700">
                      –ü–æ–≥—Ä—É–∑–∫–∞ (+500 ‚ÇΩ)
                    </label>
                  </div>
                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      name="palletizing"
                      checked={formData.palletizing}
                      onChange={handleInputChange}
                      className="w-4 h-4 text-accent-600 bg-gray-100 border-gray-300 rounded focus:ring-accent-500 focus:ring-2"
                    />
                    <label className="ml-2 text-sm font-medium text-gray-700">
                      –ü–∞–ª–ª–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (+300 ‚ÇΩ –∑–∞ –∫–∞–∂–¥—É—é –ø–∞–ª–ª–µ—Ç—É)
                    </label>
                  </div>
                </div>

                {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    <MessageSquare className="w-4 h-4 inline mr-1" />
                    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                  </label>
                  <textarea
                    name="comment"
                    value={formData.comment}
                    onChange={handleInputChange}
                    rows={3}
                    placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–∑–µ –∏–ª–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è"
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors resize-none"
                  />
                </div>

                {/* –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ */}
                {(result !== null || isCalculating) && (
                  <div className="bg-gradient-to-br from-green-50 to-green-100 border border-green-200 rounded-xl p-6">
                    {isCalculating ? (
                      <div className="text-center py-8">
                        <div className="inline-flex items-center space-x-3">
                          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600"></div>
                          <span className="text-green-700 font-medium">–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å...</span>
                        </div>
                      </div>
                    ) : result !== null ? (
                      <>
                        <div className="text-center mb-4">
                          <div className="text-3xl font-bold text-green-600 mb-2">
                            {result.toLocaleString('ru-RU')} ‚ÇΩ
                          </div>
                          <div className="text-green-700 font-medium">–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏</div>
                        </div>
                        
                        <div className="space-y-2 text-sm text-green-800">
                          <div className="flex justify-between">
                            <span>–†–∞—Å—á–µ—Ç:</span>
                            <span className="font-medium">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è</span>
                          </div>
                          {(() => {
                            const selectedWarehouse = findWarehouseByName(formData.deliveryAddress);
                            const warehouseName = selectedWarehouse ? 
                              `${selectedWarehouse.name.split(',')[0]} (${selectedWarehouse.city})` : 
                              '–ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã';
                            return (
                              <div className="flex justify-between">
                                <span>–°–∫–ª–∞–¥:</span>
                                <span className="font-medium text-xs">{warehouseName}</span>
                              </div>
                            );
                          })()}
                          {formData.boxes && parseInt(formData.boxes) > 0 && (
                            <div className="flex justify-between">
                              <span>
                                {(() => {
                                  const boxes = parseInt(formData.boxes);
                                  if (boxes <= 10) {
                                    return `–ö–æ—Ä–æ–±–∫–∏ (${boxes} —à—Ç): –¥–æ –∫—É–±–∞`;
                                  } else if (boxes <= 16) {
                                    return `–ö–æ—Ä–æ–±–∫–∏ (${boxes} —à—Ç): 1 –ø–∞–ª–ª–µ—Ç–∞`;
                                  } else {
                                    return `–ö–æ—Ä–æ–±–∫–∏ (${boxes} —à—Ç): 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞`;
                                  }
                                })()}
                              </span>
                              <span className="font-medium">
                                {(() => {
                                  const selectedWarehouse = findWarehouseByName(formData.deliveryAddress);
                                  const warehousePricing = selectedWarehouse?.pricing || {
                                    toCube: 2500,
                                    boxes1to3: 150,
                                    pallets: { 1: 2700 }
                                  };
                                  const boxes = parseInt(formData.boxes);
                                  if (boxes <= 10) {
                                    // 1-10 –∫–æ—Ä–æ–±–æ–∫ = –¥–æ –∫—É–±–∞
                                    return warehousePricing.toCube.toLocaleString('ru-RU');
                                  } else if (boxes <= 16) {
                                    // 11-16 –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞
                                    const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
                                    return palletPrice.toLocaleString('ru-RU');
                                  } else {
                                    // 17+ –∫–æ—Ä–æ–±–æ–∫ = 1 –ø–∞–ª–ª–µ—Ç–∞ + –¥–æ –∫—É–±–∞
                                    const palletPrice = warehousePricing.pallets[1] || warehousePricing.pallets['1'] || 2700;
                                    return (palletPrice + warehousePricing.toCube).toLocaleString('ru-RU');
                                  }
                                })()} ‚ÇΩ
                              </span>
                            </div>
                          )}
                          {formData.pallets && parseInt(formData.pallets) > 0 && (
                            <div className="flex justify-between">
                              <span>–ü–∞–ª–ª–µ—Ç—ã ({formData.pallets} —à—Ç):</span>
                              <span className="font-medium">
                                {(() => {
                                  const selectedWarehouse = findWarehouseByName(formData.deliveryAddress);
                                  const palletPrice = selectedWarehouse?.pricing.pallets[1] || selectedWarehouse?.pricing.pallets['1'] || 2700;
                                  return (parseInt(formData.pallets) * palletPrice).toLocaleString('ru-RU');
                                })()} ‚ÇΩ
                              </span>
                            </div>
                          )}
                          {formData.loading && (
                            <div className="flex justify-between">
                              <span>–ü–æ–≥—Ä—É–∑–∫–∞:</span>
                              <span className="font-medium">500 ‚ÇΩ</span>
                            </div>
                          )}
                          {formData.palletizing && (
                            <div className="flex justify-between">
                              <span>
                                –ü–∞–ª–ª–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ({parseInt(formData.pallets || '0')} –ø–∞–ª–ª–µ—Ç):
                              </span>
                              <span className="font-medium">
                                {parseInt(formData.pallets || '0') * 300} ‚ÇΩ
                              </span>
                            </div>
                          )}
                        </div>
                      </>
                    ) : null}

                    {result !== null && !isCalculating && (
                      <div className="mt-4 p-3 bg-amber-50 border border-amber-200 rounded-lg">
                        <p className="text-sm text-amber-800">
                          <strong>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</strong> –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—á–µ—Ç–Ω–æ–π. 
                          –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∏ –Ω–∞–∑–æ–≤–µ—Ç —Ç–æ—á–Ω—É—é —Å—É–º–º—É —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∑–∞–∫–∞–∑–∞.
                        </p>
                      </div>
                    )}
                  </div>
                )}
                {result === null ? (
                  <button
                    onClick={calculateCost}
                    className="w-full bg-accent-500 text-white py-4 rounded-lg font-semibold hover:bg-accent-600 transition-all duration-200 hover:shadow-lg hover:scale-105"
                  >
                    –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
                  </button>
                ) : (
                  <button 
                    onClick={handleSubmitOrder}
                    disabled={isSubmitting}
                    className={`w-full py-4 rounded-lg font-semibold transition-all duration-200 ${
                      isSubmitting 
                        ? 'bg-gray-400 text-gray-600 cursor-not-allowed' 
                        : 'bg-primary-800 text-white hover:bg-primary-700 hover:shadow-lg hover:scale-105'
                    }`}
                  >
                    {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É...' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </button>
                )}
              </div>

              {/* Info Panel */}
              <div className="bg-gradient-to-br from-primary-50 to-accent-50 rounded-xl p-8">
                <h3 className="text-xl font-semibold text-primary-800 mb-6">
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
                </h3>
                
                <div className="space-y-4">
                  <div className="bg-white rounded-lg p-4 shadow-sm">
                    <h4 className="font-semibold text-primary-800 mb-2">–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º:</h4>
                    <ul className="text-sm text-gray-600 space-y-1">
                      <li>‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ –∑–∞ 15 –º–∏–Ω—É—Ç</li>
                      <li>‚Ä¢ –ó–∞–±–æ—Ä –≥—Ä—É–∑–∞ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è</li>
                      <li>‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ—á–Ω–æ –≤ —Å—Ä–æ–∫</li>
                      <li>‚Ä¢ –ü–æ–ª–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å</li>
                    </ul>
                  </div>
                  
                  <div className="bg-white rounded-lg p-4 shadow-sm">
                    <h4 className="font-semibold text-primary-800 mb-2">–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:</h4>
                    <ul className="text-sm text-gray-600 space-y-1">
                      <li>‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</li>
                      <li>‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞</li>
                      <li>‚Ä¢ SMS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
                      <li>‚Ä¢ –§–æ—Ç–æ-–æ—Ç—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏</li>
                    </ul>
                  </div>
                  
                  <div className="bg-accent-100 rounded-lg p-4">
                    <h4 className="font-semibold text-accent-800 mb-2">–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:</h4>
                    <div className="space-y-2 text-sm">
                      <a href="tel:+79361302070" className="block text-accent-700 hover:text-accent-800">
                        üìû +7 (936) 130-20-70
                      </a>
                      <a href="https://wa.me/79361302070" className="block text-accent-700 hover:text-accent-800">
                        üí¨ WhatsApp
                      </a>
                      <a href="https://t.me/+79262168760" className="block text-accent-700 hover:text-accent-800">
                        üì± Telegram
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Success Modal */}
      <Modal
        isOpen={showSuccessModal}
        onClose={() => setShowSuccessModal(false)}
        title=""
        size="sm"
      >
        <div className="text-center py-4">
          <div className="bg-green-100 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6">
            <CheckCircle className="w-12 h-12 text-green-600" />
          </div>
          
          <h2 className="text-xl font-bold text-gray-900 mb-3">
            –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
          </h2>
          
          <p className="text-gray-600 mb-4 leading-relaxed text-sm">
            –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.
          </p>
          
          <div className="mb-4">
            <p className="text-gray-600 text-xs mb-3 text-center">
              –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:
            </p>
            <div className="flex justify-center space-x-3">
              <a
                href="tel:+79361302070"
                className="flex items-center justify-center bg-blue-500 text-white px-3 py-2 rounded-lg hover:bg-blue-600 transition-colors flex-1 max-w-[80px]"
              >
                <Phone className="w-4 h-4" />
              </a>
              <a
                href="https://wa.me/79361302070"
                target="_blank"
                rel="noopener noreferrer"
                className="flex items-center justify-center bg-green-500 text-white px-3 py-2 rounded-lg hover:bg-green-600 transition-colors flex-1 max-w-[80px]"
              >
                <MessageSquare className="w-4 h-4" />
              </a>
              <a
                href="https://t.me/+79262168760"
                target="_blank"
                rel="noopener noreferrer"
                className="flex items-center justify-center bg-blue-400 text-white px-3 py-2 rounded-lg hover:bg-blue-500 transition-colors flex-1 max-w-[80px]"
              >
                <MessageSquare className="w-4 h-4" />
              </a>
            </div>
          </div>
          
          <button
            onClick={() => setShowSuccessModal(false)}
            className="bg-accent-500 text-white px-6 py-2 rounded-lg font-semibold hover:bg-accent-600 transition-colors text-sm"
          >
            –ü–æ–Ω—è—Ç–Ω–æ
          </button>
        </div>
      </Modal>
    </section>
  );
};

export default Calculator;